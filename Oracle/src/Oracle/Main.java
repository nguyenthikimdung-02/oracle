/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Oracle;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Oracle.Connect;

/**
 *
 * @author NGUYEN THI KIM DUNG
 */
public class Main extends javax.swing.JFrame {
    private String header[] = {"Name", "Value", "Con_Id"};
    private String header2[] = {"Name", "Value","Unit", "Con_Id"};
    private String header3[] = {"SID", "SERIAL#", "USERNAME", "PROGRAM", "PROCESS"};
    
    private String header13[] = {"SID", "SERIAL#", "USERNAME"};
    private String header4[] = {"instance_name", "host_name", "version", "status"};
    
    private String header5[] = {"dbid", "name", "controlfile_type"};   
    private String header6[] = {"TS#", "name", "con_id"};
    private String header7[] = {"tablespace_name", "username", "bytes"};
    private String header8[] = {"ts#","name","file#","status"};
    private String header9[] = {"object_owner","object_name","policy_name","enable","static_policy"};
    private String header10[] = {"Tên user","Ngày tạo","Ngày hết hạn","Trạng thái user","Lần login cuối","Profile"};
    private String header11[] = {"Profile","Resource_name","Resource_type","Limit","Common"};
    private String header12[]={"Đăng nhập cuối"};
    private DefaultTableModel tblModel ;
    private Vector vctData = new Vector();
    private String username;
    private String password;
    private String dbURL = "jdbc:oracle:thin:@localhost:1521:orcl";
    /**
     * Creates new form Main
     */
    public Main(String username, String password) {
        
        initComponents();
        this.username=username;
        
        this.password=password;
        this.jLabel1.setText("User đang đăng nhập: "+this.username);
        if(username.equals("sys"))
                this.username = "sys as sysdba";
        this.setLocationRelativeTo(null);
    }

    private Main() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenu12 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Kill session");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jMenu1.setText("Dữ liệu");

        jMenuItem4.setText("NCC");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem19.setText("TAIKHOAN");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem19);

        jMenuItem20.setText("TAIKHOAN_AUDIT");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem20);

        jMenuBar2.add(jMenu1);

        jMenu5.setText("Thông tin tùy chọn");

        jMenuItem1.setText("sga");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuItem2.setText("pga");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuItem6.setText("instance");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenuItem7.setText("database");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuBar2.add(jMenu5);

        jMenu6.setText("Thông tin của session");

        jMenuItem5.setText("Session đang đăng nhập");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem5);

        jMenuItem18.setText("Session đang block dữ liệu");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem18);

        jMenuBar2.add(jMenu6);

        jMenu7.setText("Tablespace");

        jMenuItem8.setText("Thông tin tablespace");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenuItem9.setText("Tablespace tương ứng user");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem9);

        jMenuItem10.setText("Tất cả datafile");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem10);

        jMenuItem11.setText("Thao tác trên tablespace");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenuBar2.add(jMenu7);

        jMenu8.setText("Thông tin của user");

        jMenuItem13.setText("Thông tin cơ bản");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem13);

        jMenuItem17.setText("Nhân Viên");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem17);

        jMenuBar2.add(jMenu8);

        jMenu9.setText("Policy");

        jMenuItem12.setText("Policy hiện có");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem12);

        jMenuItem21.setText("Thiết lập policy trên bảng");
        jMenu9.add(jMenuItem21);

        jMenuBar2.add(jMenu9);

        jMenu10.setText("Profile");

        jMenuItem14.setText("Các loại Profile");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem14);

        jMenuItem15.setText("User");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu10.add(jMenuItem15);

        jMenuBar2.add(jMenu10);

        jMenu11.setText("Phân quyền");

        jMenuItem16.setText("Grant");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu11.add(jMenuItem16);

        jMenuBar2.add(jMenu11);

        jMenu12.setText("Đăng xuất");
        jMenu12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu12ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Đăng xuất");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu12.add(jMenuItem3);

        jMenuBar2.add(jMenu12);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(46, 46, 46)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu12ActionPerformed
        this.setVisible(false);
        new Connect().setVisible(true);
    }//GEN-LAST:event_jMenu12ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //sga
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tài khoản đăng nhập oracle
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM v$sga");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("NAME"));
            // Dữ liệu cột 2
            data.add(rs.getString("VALUE"));
            // Dữ liệu cột 3
            data.add(rs.getString("CON_ID"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //đăng xuất
        int result = JOptionPane.showConfirmDialog(this,
                        "Bạn có chắc muốn đăng xuất khỏi tài khoản này",
                        "Xác nhận",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
                if(result == JOptionPane.YES_OPTION){
                    this.setVisible(false);
                    new Connect().setVisible(true);
                }else if (result == JOptionPane.NO_OPTION){
                    return;
                }else {
                    return;
                }
            
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        NCC dl = new NCC(username,password);
        this.setVisible(false);
        dl.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header2, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tài khoản đăng nhập oracle
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM v$pgastat");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("NAME"));
            // Dữ liệu cột 2
            data.add(rs.getString("VALUE"));
            // Dữ liệu cột 3
            data.add(rs.getString("UNIT"));
            //Dữ liệu cột 4
            data.add(rs.getString("CON_ID"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // session đang đăng nhập
        try {
            jButton1.setVisible(true);
            tblModel = new DefaultTableModel(header3, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select SID, SERIAL#, USERNAME, PROGRAM, PROCESS FROM v$session where AUDSID != 0");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("SID"));
            // Dữ liệu cột 2
            data.add(rs.getString("SERIAL#"));
            // Dữ liệu cột 3
            data.add(rs.getString("USERNAME"));
            //Cột 4
            data.add(rs.getString("PROGRAM"));
            //cột 5
            data.add(rs.getString("PROCESS"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
            vctData.add(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header4, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select instance_name, host_name, version, status FROM v$instance");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("instance_name"));
            // Dữ liệu cột 2
            data.add(rs.getString("host_name"));
            // Dữ liệu cột 3
            data.add(rs.getString("version"));
            //Cột 4
            data.add(rs.getString("status"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // kill session
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    
            int vt= jTable1.getSelectedRow(); 
            Vector vto = (Vector)vctData.get(vt);
            String sid = (String) vto.get(0);
            String serial = (String) vto.get(1);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("alter system kill session '"+sid+","+serial+"'");
            if(rs != null)
                JOptionPane.showMessageDialog(this, "Kill thành công!");
            con.close();
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // database
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header5, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select dbid, name, controlfile_type FROM v$database");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("dbid"));
            // Dữ liệu cột 2
            data.add(rs.getString("name"));
            // Dữ liệu cột 3
            data.add(rs.getString("controlfile_type"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        //tablespace
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header6, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select TS#, NAME, CON_ID FROM v$tablespace");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("TS#"));
            // Dữ liệu cột 2
            data.add(rs.getString("name"));
            // Dữ liệu cột 3
            data.add(rs.getString("con_id"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // Tablespace tương ứng vs user
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header7, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select tablespace_name, username, bytes from dba_ts_quotas");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("tablespace_name"));
            // Dữ liệu cột 2
            data.add(rs.getString("username"));
            // Dữ liệu cột 3
            data.add(rs.getString("bytes"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // datafile
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header8, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select v$tablespace.ts#,v$tablespace.name, file#, status from v$tablespace, v$datafile where v$tablespace.TS#=v$datafile.TS#");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("ts#"));
            // Dữ liệu cột 2
            data.add(rs.getString("name"));
            // Dữ liệu cột 3
            data.add(rs.getString("file#"));
            // Dữ liệu cột 4
            data.add(rs.getString("status"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        //policy hiện có (bảo mật)
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header9, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select object_owner, object_name, policy_name, enable, static_policy from dba_policies");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("object_owner"));
            // Dữ liệu cột 2
            data.add(rs.getString("object_name"));
            // Dữ liệu cột 3
            data.add(rs.getString("policy_name"));
            // Dữ liệu cột 4
            data.add(rs.getString("enable"));
            //Dữ liệu cột 5
            data.add(rs.getString("static_policy"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    
    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // Thông tin cơ bản của user
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header10, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select username, created, expiry_date, account_status, last_login, profile from dba_users");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("username"));
            // Dữ liệu cột 2
            data.add(rs.getString("created"));
            // Dữ liệu cột 3
            data.add(rs.getString("expiry_date"));
            // Dữ liệu cột 4
            data.add(rs.getString("account_status"));
            //Dữ liệu cột 5
            data.add(rs.getString("last_login"));
            //Dữ liệu cột 6
            data.add(rs.getString("profile"));
            // Thêm một dòng vào table model
            tblModel.addRow(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        try {
            jButton1.setVisible(false);
            tblModel = new DefaultTableModel(header12, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
//                    "jdbc:oracle:thin:@localhost:1521:orcl", "sys as sysdba", "Matkhau123");
            
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select last_login from sys.dba_users where username='"+username.toUpperCase()+"'");
            while (rs.next()) {
                jLabel2.setText(rs.getString("last_login"));
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowActivated

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // các loại profile, mở form profile
        Profile prf = new Profile(username,password);
        this.setVisible(false);
        prf.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        Tablespace tbl = new Tablespace(username,password);
        this.setVisible(false);
        tbl.setVisible(true);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // form user
        User user = new User(username,password);
        this.setVisible(false);
        user.setVisible(true);
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // form Grant
        Grant gr = new Grant(username,password);
            this.setVisible(false);
            gr.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // mở form nhân viên
        NhanVien nv = new NhanVien(username,password);
        this.setVisible(false);
        nv.setVisible(true);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // session bị block dữ liệu
        try {
            jButton1.setVisible(true);
            tblModel = new DefaultTableModel(header13, 0);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            // Tạo kết nối đến server
            Connection con = DriverManager.getConnection(dbURL, username, password);
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select SID,SERIAL#, USERNAME from v$session where SID in (blocking_session)");
            Vector data = null;
            tblModel.setRowCount(0); 
        if (rs.isBeforeFirst() == false) {
   JOptionPane.showMessageDialog(this, "Chưa có thông tin!");
   return;
 }
        // Trong khi chưa hết dữ liệu
        while (rs.next()) {
            data = new Vector();
            // Dữ liệu cột 1
            data.add(rs.getString("SID"));
            // Dữ liệu cột 2
            data.add(rs.getString("SERIAL#"));
            // Dữ liệu cột 3
            data.add(rs.getString("USERNAME"));
            
            // Thêm một dòng vào table model
            tblModel.addRow(data);
            vctData.add(data);
        }
        // Hiển thị dữ liệu lên table
        jTable1.setModel(tblModel);
        con.close();
        
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new TAIKHOAN(username, password).setVisible(true);
        
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new TAIKHOAN_AUDIT(username, password).setVisible(true);
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                    
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new Main().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu12;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
